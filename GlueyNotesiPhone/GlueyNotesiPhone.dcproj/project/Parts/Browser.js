/* 
 This file was generated by Dashcode and is covered by the 
 license.txt included in the project.  You may edit this file, 
 however it is recommended to first turn off the Dashcode 
 code generator otherwise the changes will be lost.
 */

// Note: Properties and methods beginning with underbar ("_") are considered private and subject to change in future Dashcode releases.

function CreateBrowser(elementOrID, spec) 
{
    var browserElement = elementOrID;
    if (elementOrID.nodeType != Node.ELEMENT_NODE) {
        browserElement = document.getElementById(elementOrID);
    }
    
	if (browserElement && !browserElement.loaded) {
		browserElement.loaded = true;
		browserElement.object = new Browser(browserElement, spec);
		return browserElement.object;
	}
}

function Browser(element, spec)
{
    this.element = element;
    
    // Find the header and content elements.
    // The last Element child will be the content. If present, the second last will be the header.
    for (var child = element.lastChild; child != null; child = child.previousSibling) {
        if (child.nodeType != Node.ELEMENT_NODE) {
            continue;
        }
        if (!this._contentElement) {
            this._contentElement = child;
        } else if (!this._headerElement) {
            this._headerElement = child;
        }
    }
}

Browser.prototype.getCurrentView = function()
{
    return this._contentElement.object.getCurrentView();
}

Browser.prototype.getCurrentTitle = function()
{
    return this._headerElement.object._getCurrentTitle();
}

Browser.prototype.goForward = function(toView, title)
{
    var self = this;
    var prevView = this._contentElement.object.getCurrentView();
    var callback = function() {
        self._backButtonClicked(prevView);
    }
    
    var transition = this._contentElement.object.getTransitionForView(toView);
    if (transition) {
        var duration = (transition.type != Transition.NONE_TYPE) ? parseFloat(transition.duration) : 0;
        this._headerElement.object._setAnimationDuration(duration);
        this._headerElement.object._setAnimationTiming(transition.timing);        
    }
    
    this._headerElement.object._goForward(title, callback);
    
	this._contentElement.object.setCurrentView(toView);
}

Browser.prototype.goBack = function()
{
    return this._headerElement.object._goBack();
}

Browser.prototype._backButtonClicked = function(toView)
{
	this._contentElement.object.setCurrentView(toView, true);
}
